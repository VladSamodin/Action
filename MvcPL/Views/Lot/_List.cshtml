@using MvcPL.Pagination;
@model MvcPL.Pagination.PaginationList<MvcPL.Models.Lot.LotViewModel>

@if (Model.Items.Count() == 0)
{
    <tr>
        <td colspan="7">
            Нет лотов
        </td>
    </tr>
}
else
{
    foreach (var lot in Model.Items)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelLot => lot.Id)
            </td>
            <td>
                @if (lot.Image == null)
                {
                    <img class="image_min" src="~/Content/img/NoImage100px.png">
                }
                else
                {
                    @Html.Raw(string.Format("<img class='image_min' src=\"data:image/jpeg;base64,{0}\" />", Convert.ToBase64String(lot.Image)))
                }
            <td>
                @Html.DisplayFor(modelLot => lot.Name)
            </td>
            <td>
                @Html.DisplayFor(modelLot => lot.CurrentPrice)$
            </td>
            <td>
                @Html.DisplayFor(modelLot => lot.FinishDateTime)
            </td>
            <td>
                @Html.DisplayFor(modelLot => lot.ModerationStatus)
            </td>
            <td>
                @if (HttpContext.Current.User.IsInRole("Administrator"))
                {
                    @Html.ActionLink("Edit", "Edit", new { id = lot.Id })
                }
                @if (HttpContext.Current.User.IsInRole("Administrator"))
                {
                    @Html.ActionLink("Delete", "Delete", new { id = lot.Id })
                }
                @Html.ActionLink("Details", "Details", new { id = lot.Id })
                @if (lot.OwnerId == ViewBag.UserId)
                {
                    @:|@Html.ActionLink("Edit", "Edit", new { id = lot.Id })
                    @:|@Html.ActionLink("Delete", "Delete", new { id = lot.Id })
                }
            </td>
        </tr>
    }
    <tr>
        <td colspan="7" class="pagination-centered">
            @*Html.PageLinks((PageInfo)ViewBag.PageInfo, x => Url.Action("Index", new { page = x}), "list")*@
            @Html.PageLinks(Model.PageInfo, x => Url.Action(this.Context.Request.Url.Segments[0], new { page = x }), "list")
        </td>
    </tr>
}
